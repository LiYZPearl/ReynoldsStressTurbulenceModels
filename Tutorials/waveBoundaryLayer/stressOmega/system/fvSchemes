/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default Euler;
}

gradSchemes
{
//    default	cellLimited fourth 1;
    default         Gauss linear;
    grad(U)         Gauss linear;
    grad(alpha1)     Gauss linear;
}

divSchemes
{
    div(phi,R)      Gauss upwind;
    div(phi,U)      Gauss upwind;
    div(rhoPhi,U)  Gauss upwind;
    div(phi,alpha)  Gauss vanLeer01;
    div(phirb,alpha) Gauss interfaceCompression;
    div(rhoPhi,k)      Gauss upwind;
    div(rhoPhi,omega) Gauss upwind;//upwind;

   div(phi,k)      Gauss upwind;
   div(phi,omega) Gauss upwind;//upwind;
   div((muEff*dev(T(grad(U))))) Gauss linear;
   div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
   div(R)     	    Gauss linear;
   div((rho*R))     	    Gauss linear;
   div(phi,R)      Gauss upwind;
   div(rhophi,R)   Gauss Minmod;
   div(((rho*nu)*dev2(T(grad(U)))))  Gauss linear;
div((nu*dev2(T(grad(U))))) Gauss linear;
div((nuEff*dev2(T(grad(U))))) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    pd;
    pcorr;
    gamma;
}

//wallDist
//{
 //   method meshWave;
//}
// ************************************************************************* //
